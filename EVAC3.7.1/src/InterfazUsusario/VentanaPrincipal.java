/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazUsusario;

import LogicaAplicacion.Proyecto;
import java.beans.PropertyVetoException;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Cristian
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    private static VentanaPrincipal ventanaPrincipal;
       
    public VentanaPrincipal() {
        initComponents();
        this.labelLogo.setBounds( (this.getBounds().width / 2)+315, (this.getBounds().height / 2)+75,500, 430);
        ImageIcon img = new ImageIcon(this.getClass().getResource("/Recursos/AC3D.png"));
        this.setIconImage(img.getImage());
        this.setEstadoMenuPrincipal(true,false,false);
    }
    
     public static VentanaPrincipal getVentanaPrincipal(){
        if(ventanaPrincipal==null){
            ventanaPrincipal=new VentanaPrincipal();
        }
        return(ventanaPrincipal);
    }
     
    void setEstadoMenuPrincipal (boolean opcionesMenu, boolean opcionesConfiguracion, boolean opcionesSimulacion){
        this.menuProyectos.setEnabled(opcionesMenu);
        this.menuEditar.setEnabled(opcionesMenu);
        this.menuAyuda.setEnabled(opcionesMenu);
        this.menuEjecutar.setEnabled(opcionesMenu);
        this.itemAnimacion.setEnabled(opcionesSimulacion);
        this.itemReplicacion.setEnabled(opcionesSimulacion);
        this.itemPropiedades.setEnabled(opcionesConfiguracion);
        this.itemAmbiente.setEnabled(opcionesConfiguracion);
        //ACTUALIZO DATOS BARRA DE INFORMACIÓN -----------------------------
        if(Proyecto.hayProyectoActual()){
            this.labelProyecto.setText(" PROYECTO: < " + Proyecto.getProyecto().getNombreProyecto() + " >");
            this.labelEstado.setText(" ESTADO: <No validado>");
            if(Proyecto.getProyecto().getProyectoValido()!=0)
                this.labelEstado.setText(" ESTADO: < Validado >");
        }
        else{
            this.labelProyecto.setText(" PROYECTO: < Ninguno >");
            this.labelEstado.setText(" ESTADO: <No validado>");
        }
    }

    public JLabel getLabelEstado() {
        return labelEstado;
    }

    public void setLabelEstado(JLabel labelEstado) {
        this.labelEstado = labelEstado;
    }

    public JLabel getLabelProyecto() {
        return labelProyecto;
    }

    public void setLabelProyecto(JLabel labelProyecto) {
        this.labelProyecto = labelProyecto;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelEscritorio = new javax.swing.JDesktopPane();
        labelLogo = new javax.swing.JLabel();
        labelProyecto = new javax.swing.JLabel();
        labelEstado = new javax.swing.JLabel();
        barraMenu = new javax.swing.JMenuBar();
        menuProyectos = new javax.swing.JMenu();
        itemNuevo = new javax.swing.JMenuItem();
        itemAbrir = new javax.swing.JMenuItem();
        itemAbrirCompatibilidad = new javax.swing.JMenuItem();
        itemGuardar = new javax.swing.JMenuItem();
        itemSalir = new javax.swing.JMenuItem();
        menuEditar = new javax.swing.JMenu();
        itemPropiedades = new javax.swing.JRadioButtonMenuItem();
        itemAmbiente = new javax.swing.JRadioButtonMenuItem();
        menuEjecutar = new javax.swing.JMenu();
        itemAnimacion = new javax.swing.JMenuItem();
        itemReplicacion = new javax.swing.JMenuItem();
        itemLotePrueba = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        itemAyuda = new javax.swing.JMenuItem();
        itemAcerca = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SIMULADOR DE EVACUACIONES");
        setBackground(new java.awt.Color(100, 100, 100));

        panelEscritorio.setBackground(new java.awt.Color(100, 100, 100));

        labelLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/logo_chico.jpg"))); // NOI18N
        panelEscritorio.add(labelLogo);
        labelLogo.setBounds(150, 210, 544, 161);

        labelProyecto.setForeground(new java.awt.Color(204, 204, 204));
        labelProyecto.setText("PROYECTO:");
        panelEscritorio.add(labelProyecto);
        labelProyecto.setBounds(10, 10, 470, 14);

        labelEstado.setForeground(new java.awt.Color(204, 204, 204));
        labelEstado.setText("ESTADO:");
        panelEscritorio.add(labelEstado);
        labelEstado.setBounds(10, 30, 360, 14);

        getContentPane().add(panelEscritorio, java.awt.BorderLayout.CENTER);

        barraMenu.setPreferredSize(new java.awt.Dimension(173, 30));

        menuProyectos.setText("  Proyecto");
        menuProyectos.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        itemNuevo.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        itemNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/nuevo.png"))); // NOI18N
        itemNuevo.setText("Nuevo");
        itemNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNuevoActionPerformed(evt);
            }
        });
        menuProyectos.add(itemNuevo);

        itemAbrir.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        itemAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Abrir.png"))); // NOI18N
        itemAbrir.setText("Abrir");
        itemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAbrirActionPerformed(evt);
            }
        });
        menuProyectos.add(itemAbrir);

        itemAbrirCompatibilidad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/compatibilidad.png"))); // NOI18N
        itemAbrirCompatibilidad.setText("Compatibilidad");
        itemAbrirCompatibilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAbrirCompatibilidadActionPerformed(evt);
            }
        });
        menuProyectos.add(itemAbrirCompatibilidad);

        itemGuardar.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        itemGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/casos.png"))); // NOI18N
        itemGuardar.setText("Guardar");
        itemGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemGuardarActionPerformed(evt);
            }
        });
        menuProyectos.add(itemGuardar);

        itemSalir.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        itemSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/salir.png"))); // NOI18N
        itemSalir.setText("Salir");
        itemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSalirActionPerformed(evt);
            }
        });
        menuProyectos.add(itemSalir);

        barraMenu.add(menuProyectos);

        menuEditar.setText("    Editar    ");
        menuEditar.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        itemPropiedades.setText("Propiedades");
        itemPropiedades.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/configurar.png"))); // NOI18N
        itemPropiedades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemPropiedadesActionPerformed(evt);
            }
        });
        menuEditar.add(itemPropiedades);

        itemAmbiente.setText("Ambiente");
        itemAmbiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/buildings3.png"))); // NOI18N
        itemAmbiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAmbienteActionPerformed(evt);
            }
        });
        menuEditar.add(itemAmbiente);

        barraMenu.add(menuEditar);

        menuEjecutar.setText("  Ejecutar  ");

        itemAnimacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/iconoanimacion.png"))); // NOI18N
        itemAnimacion.setText("Animación");
        itemAnimacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAnimacionActionPerformed(evt);
            }
        });
        menuEjecutar.add(itemAnimacion);

        itemReplicacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/actualizarChico.png"))); // NOI18N
        itemReplicacion.setText("Replicación");
        itemReplicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemReplicacionActionPerformed(evt);
            }
        });
        menuEjecutar.add(itemReplicacion);

        itemLotePrueba.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/111casos.png"))); // NOI18N
        itemLotePrueba.setText("Batch");
        itemLotePrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLotePruebaActionPerformed(evt);
            }
        });
        menuEjecutar.add(itemLotePrueba);

        barraMenu.add(menuEjecutar);

        menuAyuda.setText("  Ayuda  ");
        menuAyuda.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        itemAyuda.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        itemAyuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/ayuda.png"))); // NOI18N
        itemAyuda.setText("Ayuda");
        menuAyuda.add(itemAyuda);

        itemAcerca.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        itemAcerca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/AC3D.png"))); // NOI18N
        itemAcerca.setText("Acerca de EVAC");
        itemAcerca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAcercaActionPerformed(evt);
            }
        });
        menuAyuda.add(itemAcerca);

        barraMenu.add(menuAyuda);

        setJMenuBar(barraMenu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNuevoActionPerformed
        // TODO add your handling code here:
        int opcion=0;
        if (Proyecto.hayProyectoActual()){ //SI HAY UN PROYECTO ABIERTO ACTUAL PREGUNTO SI LO QUOIERE CERRAR 
            opcion=JOptionPane.showConfirmDialog(this,"Cualquier cambio en proyecto no guardado se perdera", "Cerrar Proyecto Actual", JOptionPane.YES_NO_OPTION);
        }
        if (opcion==0){
            Proyecto.setNullProyectoActual();
            Proyecto.getProyecto();
            this.setEstadoMenuPrincipal(false,false,false);
            VentanaConfiguracionGeneral vcg=VentanaConfiguracionGeneral.getVentanaconfiguracionGeneral();
            if (!this.panelEscritorio.isAncestorOf(vcg)) {
                //Si el JDesktopPane no contiene a optionFrame, este se agrega.
                this.panelEscritorio.add(vcg);
            }else{
                //Si el JDesktopPane ya contiene a optionFrame, este solo se selecciona.
                this.panelEscritorio.setSelectedFrame(vcg);
            }
            vcg.show();
            /*try {
                vcg.setMaximum(true);
            } 
            catch (PropertyVetoException e) {
                // Vetoed by internalFrame
                // ... possibly add some handling for this case
            }*/
        }
    }//GEN-LAST:event_itemNuevoActionPerformed

    private void itemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_itemSalirActionPerformed

    private void itemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAbrirActionPerformed
        // TODO add your handling code here:
        int opcion=0;
        if (Proyecto.hayProyectoActual()){ //SI HAY UN PROYECTO ABIERTO ACTUAL PREGUNTO SI LO QUOIERE CERRAR 
            opcion=JOptionPane.showConfirmDialog(this,"Cualquier cambio en proyecto no guardado se perdera", "Cerrar Proyecto Actual", JOptionPane.YES_NO_OPTION);
        }
        
        if (opcion==0){
            Proyecto.setNullProyectoActual();
            Proyecto.setProyectoArchivo();
            this.setEstadoMenuPrincipal(false,false,false);
            VentanaConfiguracionGeneral vcg=VentanaConfiguracionGeneral.getVentanaconfiguracionGeneral();
            if (!this.panelEscritorio.isAncestorOf(vcg)) {
                //Si el JDesktopPane no contiene a optionFrame, este se agrega.
                this.panelEscritorio.add(vcg);
            }else{
                //Si el JDesktopPane ya contiene a optionFrame, este solo se selecciona.
                this.panelEscritorio.setSelectedFrame(vcg);
            }
            vcg.show();
            /*try {
                vcg.setMaximum(true);
            } 
            catch (PropertyVetoException e) {
                // Vetoed by internalFrame
                // ... possibly add some handling for this case
            }*/
        }
    }//GEN-LAST:event_itemAbrirActionPerformed

    private void itemAbrirCompatibilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAbrirCompatibilidadActionPerformed
        // TODO add your handling code here:
        int opcion=0;
        if (Proyecto.hayProyectoActual()){ //SI HAY UN PROYECTO ABIERTO ACTUAL PREGUNTO SI LO QUOIERE CERRAR 
            opcion=JOptionPane.showConfirmDialog(this,"Cualquier cambio en proyecto no guardado se perdera", "Cerrar Proyecto Actual", JOptionPane.YES_NO_OPTION);
        }
        
        if (opcion==0){
            Proyecto.setNullProyectoActual();
            Proyecto.setProyectoArchivoCompatibilidad();
            this.setEstadoMenuPrincipal(false,false,false);
            VentanaConfiguracionGeneral vcg=VentanaConfiguracionGeneral.getVentanaconfiguracionGeneral();
            if (!this.panelEscritorio.isAncestorOf(vcg)) {
                //Si el JDesktopPane no contiene a optionFrame, este se agrega.
                this.panelEscritorio.add(vcg);
            }else{
                //Si el JDesktopPane ya contiene a optionFrame, este solo se selecciona.
                this.panelEscritorio.setSelectedFrame(vcg);
            }
            vcg.show();
            try {
                vcg.setMaximum(true);
            } 
            catch (PropertyVetoException e) {
                // Vetoed by internalFrame
                // ... possibly add some handling for this case
            }
        }
    }//GEN-LAST:event_itemAbrirCompatibilidadActionPerformed

    private void itemGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemGuardarActionPerformed
        // TODO add your handling code here:
        if(Proyecto.hayProyectoActual()){
            Proyecto.guardarProyecto();
        }
        else{
            JOptionPane.showMessageDialog(this,"No hay un proyecto abierto");
        }
    }//GEN-LAST:event_itemGuardarActionPerformed

    private void itemPropiedadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemPropiedadesActionPerformed
        // TODO add your handling code here:
        if(Proyecto.hayProyectoActual()){
            
            this.setEstadoMenuPrincipal(false,false,false);
            VentanaConfiguracionGeneral vcg=VentanaConfiguracionGeneral.getVentanaconfiguracionGeneral();
            if (!this.panelEscritorio.isAncestorOf(vcg)) {
                //Si el JDesktopPane no contiene a optionFrame, este se agrega.
                this.panelEscritorio.add(vcg);
            }else{
                //Si el JDesktopPane ya contiene a optionFrame, este solo se selecciona.
                this.panelEscritorio.setSelectedFrame(vcg);
            }
            //VentanaConfiguracionGeneral vcg=new VentanaConfiguracionGeneral();
            //this.panelEscritorio.add(vcg);
            //this.setEstadoMenuPrincipal(false,false,false);
            vcg.show();
            /*try {
                vcg.setMaximum(true);
            } 
            catch (PropertyVetoException e) {
                // Vetoed by internalFrame
                // ... possibly add some handling for this case
            }*/
        }
        else{
            JOptionPane.showMessageDialog(this,"No hay un proyecto abierto");
        }
    
    }//GEN-LAST:event_itemPropiedadesActionPerformed

    private void itemAmbienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAmbienteActionPerformed
        // TODO add your handling code here:
        if((Proyecto.hayProyectoActual()) && (Proyecto.getProyecto().getTamañox()>0)&&(Proyecto.getProyecto().getTamañoy()>0)){
            //VentanaConfiguracionAmbiente vca=new VentanaConfiguracionAmbiente();
            //this.panelEscritorio.add(vca);
            //vca.show();
            this.setEstadoMenuPrincipal(false,false,false);
            VentanaConfiguracionAmbiente vca=VentanaConfiguracionAmbiente.getVentanaConfiguracionAmbiente();
            if (!this.panelEscritorio.isAncestorOf(vca)) {
                //Si el JDesktopPane no contiene a optionFrame, este se agrega.
                this.panelEscritorio.add(vca);
            }else{
                //Si el JDesktopPane ya contiene a optionFrame, este solo se selecciona.
                this.panelEscritorio.setSelectedFrame(vca);
            }
            vca.show();
            try {
                vca.setMaximum(true);
            } 
            catch (PropertyVetoException e) {
                // Vetoed by internalFrame
                // ... possibly add some handling for this case
            }
            
            /*VentanaConfiguracionAmbiente vca=VentanaConfiguracionAmbiente.getVentanaConfiguracionAmbiente();
            this.panelEscritorio.add(vca);
            this.setEstadoMenuPrincipal(false,false,false);
            vca.show();
            try {
                vca.setMaximum(true);
            } 
            catch (PropertyVetoException e) {
                // Vetoed by internalFrame
                // ... possibly add some handling for this case
            }*/
        }
        else{
            JOptionPane.showMessageDialog(this,"No hay un proyecto abierto  o las dimensiones del ambiente son incorrectas");
        }
    }//GEN-LAST:event_itemAmbienteActionPerformed

    private void itemAnimacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAnimacionActionPerformed
        // TODO add your handling code here:
        if(Proyecto.proyectoValido()){
            this.setEstadoMenuPrincipal(false,false,false);
            VentanaAnimacion va=VentanaAnimacion.getVentanaAnimacion();
            if (!this.panelEscritorio.isAncestorOf(va)) {
                //Si el JDesktopPane no contiene a optionFrame, este se agrega.
                this.panelEscritorio.add(va);
            }else{
                //Si el JDesktopPane ya contiene a optionFrame, este solo se selecciona.
                this.panelEscritorio.setSelectedFrame(va);
            }
            va.show();
            va.setBorder(null);
            try {
                va.setMaximum(true);
            } 
            catch (PropertyVetoException e) {
                // Vetoed by internalFrame
                // ... possibly add some handling for this case
            }
        }
        else{
            JOptionPane.showMessageDialog(this,"El proyecto debe ser un proyecto valido");
        }
    }//GEN-LAST:event_itemAnimacionActionPerformed

    private void itemReplicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemReplicacionActionPerformed
        // TODO add your handling code here:
        if(Proyecto.proyectoValido()){
            this.setEstadoMenuPrincipal(false,false,false);
            VentanaSimulacion vs=VentanaSimulacion.getVentanaSimulacion();
            if (!this.panelEscritorio.isAncestorOf(vs)) {
                //Si el JDesktopPane no contiene a optionFrame, este se agrega.
                this.panelEscritorio.add(vs);
            }else{
                //Si el JDesktopPane ya contiene a optionFrame, este solo se selecciona.
                this.panelEscritorio.setSelectedFrame(vs);
            }
            vs.show();
            vs.setBorder(null);
            try {
                vs.setMaximum(true);
            } 
            catch (PropertyVetoException e) {
                // Vetoed by internalFrame
                // ... possibly add some handling for this case
            }
        }
        else{
            JOptionPane.showMessageDialog(this,"El proyecto debe ser un proyecto valido");
        }
    }//GEN-LAST:event_itemReplicacionActionPerformed

    private void itemLotePruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLotePruebaActionPerformed
        // TODO add your handling code here:
        this.setEstadoMenuPrincipal(false,false,false);
        VentanaBatch vb = VentanaBatch.getVentanaBatch();
        if (!this.panelEscritorio.isAncestorOf(vb)) {
                //Si el JDesktopPane no contiene a optionFrame, este se agrega.
                this.panelEscritorio.add(vb);
            }else{
                //Si el JDesktopPane ya contiene a optionFrame, este solo se selecciona.
                this.panelEscritorio.setSelectedFrame(vb);
            }
            vb.show();
            vb.setBorder(null);
            try {
                vb.setMaximum(true);
            } 
            catch (PropertyVetoException e) {
                // Vetoed by internalFrame
                // ... possibly add some handling for this case
            }
            
    }//GEN-LAST:event_itemLotePruebaActionPerformed

    private void itemAcercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAcercaActionPerformed
        // TODO add your handling code here:
        this.setEstadoMenuPrincipal(false,false,false);
        VentanaAcerca vb = VentanaAcerca.getVentanaAcerca();
        if (!this.panelEscritorio.isAncestorOf(vb)) {
                //Si el JDesktopPane no contiene a optionFrame, este se agrega.
                this.panelEscritorio.add(vb);
            }else{
                //Si el JDesktopPane ya contiene a optionFrame, este solo se selecciona.
                this.panelEscritorio.setSelectedFrame(vb);
            }
            vb.show();
            vb.setBorder(null);
    }//GEN-LAST:event_itemAcercaActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JMenuItem itemAbrir;
    private javax.swing.JMenuItem itemAbrirCompatibilidad;
    private javax.swing.JMenuItem itemAcerca;
    private javax.swing.JRadioButtonMenuItem itemAmbiente;
    private javax.swing.JMenuItem itemAnimacion;
    private javax.swing.JMenuItem itemAyuda;
    private javax.swing.JMenuItem itemGuardar;
    private javax.swing.JMenuItem itemLotePrueba;
    private javax.swing.JMenuItem itemNuevo;
    private javax.swing.JRadioButtonMenuItem itemPropiedades;
    private javax.swing.JMenuItem itemReplicacion;
    private javax.swing.JMenuItem itemSalir;
    private javax.swing.JLabel labelEstado;
    private javax.swing.JLabel labelLogo;
    private javax.swing.JLabel labelProyecto;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenu menuEditar;
    private javax.swing.JMenu menuEjecutar;
    private javax.swing.JMenu menuProyectos;
    private javax.swing.JDesktopPane panelEscritorio;
    // End of variables declaration//GEN-END:variables
  
}
